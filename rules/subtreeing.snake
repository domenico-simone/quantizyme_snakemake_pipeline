
import sys, os
import pandas as pd

# configfile: "config.yaml"
#
# # Define variables used through the pipeline
# ruleDir = os.path.join(os.path.expanduser(config['pipeline_dir']), 'rules')
# scriptsDir = os.path.join(os.path.expanduser(config['pipeline_dir']), 'scripts')
# #projectIDs = pd.read_table(config["reference_transcripts"], comment='#').set_index("reference_transcript", drop=False)
# # Define which gene to work on
# #ref_gene_fasta = config['ref_gene_fasta']
# reference_transcripts_dir = config['reference_transcripts_dir']
# reference_transcripts_length_distribution = config['reference_transcripts_length_distribution']
# model_dir = [config['model_dir']]
# projectID = [config['projectID']]
# log_dir = [config['log_dir']]
# remove_seqs = [config['remove_seqs']]
# remove_lower_t = [config['remove_lower_t']] # 0
# remove_higher_t = [config['remove_higher_t']] # 0
# #model_dir_projectID = model_dir + "/" + projectID + "_MODEL_" + "_" + str(remove_lower_t) + "_" + str(remove_higher_t)
# subtrees = config['subtrees']

print(os.getcwd())
print(model_dir)

rule all:
    input:
        "out.zip"

rule compress_out_folder:
    input:
        expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_annot_subtree_{n}.fasta", model_dir=model_dir, projectID=projectID, n=range(subtrees), remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t)
    output:
        "out.zip"
    shell:
        """
        gzip -c {input} > {output}
        """

#.format(model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t),
#.format(model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t)
#         #expand("{{model_dir}}/{{projectID}}_MODEL_{{remove_lower_t}}_{{remove_higher_t}}/{{projectID}}_annot_subtree_{n}.fasta", n=range(subtrees))
