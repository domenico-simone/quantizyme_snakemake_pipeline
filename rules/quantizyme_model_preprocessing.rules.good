import sys, os

# # which rules shall not be executed on cluster as separate job?
#localrules: quantizyme_model_all, transcript_filtering, transcript_length_distribution

# reference_transcripts_length_distribution = config['reference_transcripts_length_distribution']
# reference_transcripts_dir = config['reference_transcripts_dir']
# projectID = config['projectID']
# remove_seqs = config['remove_seqs'] # FALSE
# #remove_lower_t = config['remove_lower_t'] # 0
# #remove_higher_t = config['remove_lower_t'] # 0
# subtrees = config['subtrees'] #3

#print(reference_transcripts_length_distribution)
#print(projectID)
#print(reference_transcripts_dir)
#print(scriptsDir)

rule quantizyme_model_all:
    input:
        "done.txt",
        #subtreeing("out.zip"),
        #"{}/{}_MODEL_{}_{}/{}_start.fasta".format(model_dir, projectID, remove_lower_t, remove_higher_t, projectID),
        #"{}/{}_MODEL_{}_{}/align1.clustalo.phy".format(model_dir, projectID, remove_lower_t, remove_higher_t),
        "{}/{}_MODEL_{}_{}/{}_hc_tree_1.pdf".format(model_dir, projectID, remove_lower_t, remove_higher_t, projectID),
        #expand("{model_dir}/{projectID}_MODEL_{{remove_lower_t}}_{{remove_higher_t}}/{projectID}_start.fasta", model_dir=model_dir, projectID=projectID),
        #expand("{model_dir_projectID}/{projectID}_start.fasta", model_dir_projectID=model_dir_projectID, projectID=projectID),
        "{}/{}_transcript_length_distribution.pdf".format(reference_transcripts_length_distribution, projectID),
        #expand("{model_dir}/{projectID}_MODEL_{{remove_lower_t}}_{{remove_higher_t}}/align1.clustalo.phy", model_dir=model_dir, projectID=projectID),
        #expand("{model_dir}/{projectID}_MODEL_{{remove_lower_t}}_{{remove_higher_t}}/{projectID}_hc_tree_1.pdf", model_dir=model_dir, projectID=projectID)

rule transcript_length_distribution:
    input:
        file="{}/{}.fasta".format(reference_transcripts_dir, projectID)
        # dir="reference_transcripts",
        # file="{projectID}.fasta",
    output:
        file="reference_transcripts_length_distribution/{projectID}_transcript_length_distribution.pdf"
        # dir='reference_transcripts_length_distribution',
        # file="{projectID}_transcript_length_distribution.pdf",
    log:
        "logs/quantizyme_model_figure1/{projectID}_quantizyme_model_figure1.log"
    shell:
        """
        Rscript --vanilla {scriptsDir}/quantizyme_model_figure1.R {output.file} {input.file} 2> {log}
        """

rule transcript_filtering:
    input:
        #expand("{reference_transcripts_dir}/{projectID}.fasta", reference_transcripts_dir=reference_transcripts_dir, projectID=projectID)
        file="{}/{}.fasta".format(reference_transcripts_dir, projectID)
        #"{ref_gene}.fasta"
    output:
#        filtered_ref_sequences = "{proj_name}_MODEL/{proj_name}_start.fasta"
        #expand("{model_dir_projectID}/{projectID}_start.fasta", model_dir_projectID=model_dir_projectID, projectID=projectID),
        # expand("{model_dir}/{projectID}_MODEL_{{remove_lower_t}}_{{remove_higher_t}}/{projectID}_start.fasta", model_dir=model_dir, projectID=projectID)
        file="{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_start.fasta"
    params:
        #outdir = {model_dir_projectID},
        outdir = "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}",
        outplot = "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_thresholded_distribution.pdf",
        filter_seqs = {remove_seqs},
        filter_lower_t = "{remove_lower_t}",
        filter_higher_t = "{remove_higher_t}"
    # log:
    #     "logs/quantizyme_model_transcript_filtering/{projectID}_filtering_{{remove_lower_t}}_{{remove_higher_t}}.log"
    shell:
        """
        Rscript --vanilla {scriptsDir}/quantizyme_model_ref_sequence_filtering.R -d {params.outdir} -p {projectID} -i {input.file} -o {output.file} -f {params.filter_seqs} -l {params.filter_lower_t} -u {params.filter_higher_t} --outplot={params.outplot} 2> {log}
        """

rule run_MSA:
    input:
        "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_start.fasta"
        #expand("{model_dir}/{projectID}_MODEL_{{remove_lower_t}}_{{remove_higher_t}}/{projectID}_start.fasta", model_dir=model_dir, projectID=projectID)
    output:
        "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/align1.phy"
        #expand("{model_dir}/{projectID}_MODEL_{{remove_lower_t}}_{{remove_higher_t}}/align1.clustalo.phy", model_dir=model_dir, projectID=projectID)
    threads: 20
    # log:
    #     #expand("logs/quantizyme_model_MSA/{projectID}_filtering_{{remove_lower_t}}_{{remove_higher_t}}.log", projectID=projectID)
    #     "logs/quantizyme_model_MSA/{}_filtering_{}_{}.log".format(projectID, {remove_lower_t}, {remove_higher_t})
    # params:
    #     outdir = expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}", model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t)
    shell:
        """
        clustalo \
        --threads {threads} \
        -i {input} \
        -o {output} \
        --outfmt=phy  > {log} 2>&1
        """
#
rule clustering:
    input:
        alignment = "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/align1.phy",
        fasta = "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_start.fasta"
        #expand("{model_dir}/{projectID}_MODEL_{{remove_lower_t}}_{{remove_higher_t}}/align1.clustalo.phy", model_dir=model_dir, projectID=projectID)
    output:
        #expand("{model_dir}/{projectID}_MODEL_{{remove_lower_t}}_{{remove_higher_t}}/{projectID}_hc_tree_1.pdf", model_dir=model_dir, projectID=projectID),
        "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_hc_tree_1.pdf"
        #expand("{projectID}_hc_tree_1.pdf", projectID=projectID),
        #dir=expand('{model_dir}/{projectID}_MODEL_{{remove_lower_t}}_{{remove_higher_t}}', model_dir=model_dir, projectID=projectID)
    params:
        projectID = "{projectID}",
        outdir = "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}"
    shell:
        """
        Rscript --vanilla {scriptsDir}/quantizyme_model_clustering.R -a {input.alignment} -i {input.fasta} -d {params.outdir} -p {params.projectID}
        """

rule subtreeing:
    input:
        alignment = "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/align1.phy",#.format(model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t),
        fasta = "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_start.fasta"#.format(model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t)
    output:
        expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_annot_subtree_{n}.fasta", model_dir=[model_dir], projectID=[projectID], n=range(subtrees), remove_lower_t=[remove_lower_t], remove_higher_t=[remove_higher_t])
    params:
        projectID = "{projectID}",
        outdir = "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}"
    shell:
        """
        Rscript --vanilla {scriptsDir}/quantizyme_model_cut_subtree.R -a {input.alignment} -i {input.fasta}
        """

subworkflow subtreeing:
    #workdir: "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}"
    workdir: "."
    snakefile: "./subtreeing.snake"


rule a:
    input: subtreeing("out.zip")
    output: "done.txt"
    shell:
        """
        ls {input} > {output}
        """

# rule subtreeing:
#     input:
#         alignment = "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/align1.phy".format(model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t),
#         fasta = "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_start.fasta".format(model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t)
#     output:
#         expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_annot_subtree_{n}.fasta", model_dir=model_dir, projectID=projectID, n=subtrees, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t)
#     params:
#         projectID = "{projectID}",
#         outdir = "{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}"
#     shell:
#         """
#         Rscript --vanilla {scriptsDir}/quantizyme_model_cut_subtree.R -a {input.alignment} -i {input.fasta}
#         """
#
# rule compress_out_folder:
#     input:
#         expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_annot_subtree_{n}.fasta", model_dir=model_dir, projectID=projectID, n=subtrees, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t)
#     output:
#         "out.zip"
#     shell:
#         """
#         gzip -c {input} > {output}
#         """
#
# rule subtree:
#     input: name="" if config["subtree_list"] else ...
#     output:


#rule html_report


# rule all:
#     input: "test_output"
#
# rule test_interactive:
#     input:
#         "test_input"
#     output:
#         "test_output"
#     shell:
#         """
#         #rm -f test_output
#         Rscript --vanilla test.2.R
#         touch test_output
#         """
