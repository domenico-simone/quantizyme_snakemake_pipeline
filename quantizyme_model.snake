"""
    Snakemake implementation of the quantizyme pipeline.
"""

import sys, os

configfile: "config.yaml"

# Define variables used through the pipeline
ruleDir = os.path.join(os.path.expanduser(config['pipeline_dir']), 'rules')
scriptsDir = os.path.join(os.path.expanduser(config['pipeline_dir']), 'scripts')

# Define which gene to work on
#ref_gene_fasta = config['ref_gene_fasta']
reference_transcripts_dir = config['reference_transcripts_dir']
reference_transcripts_length_distribution = config['reference_transcripts_length_distribution']
model_dir = config['model_dir']
projectID = config['projectID']
log_dir = config['log_dir']
remove_lower_t = config['remove_lower_t'] # 0
remove_higher_t = config['remove_higher_t'] # 0
model_dir_projectID = model_dir + "/" + projectID + "_MODEL_" + "_" + str(remove_lower_t) + "_" + str(remove_higher_t)

#print(remove_lower_t)

# Import rules
include: os.path.join(ruleDir, 'quantizyme_model_preprocessing.rules')

# Target inputs
rule all:
    input:
        #expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_start.fasta", model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t),
        #expand("{model_dir_projectID}/{projectID}_start.fasta", model_dir_projectID=model_dir_projectID, projectID=projectID),
        expand("{reference_transcripts_length_distribution}/{projectID}_transcript_length_distribution.pdf", reference_transcripts_length_distribution=reference_transcripts_length_distribution, projectID=projectID),
        expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/align1.clustalo.phy", model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t),
        #expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_hc_tree_1.pdf", model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t)

#bweeeeee
