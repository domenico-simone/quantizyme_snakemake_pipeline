"""
    Snakemake implementation of the quantizyme pipeline.
"""

import sys, os
import pandas as pd

configfile: "config.yaml"

# Define variables used through the pipeline
ruleDir = os.path.join(os.path.expanduser(config['pipeline_dir']), 'rules')
scriptsDir = os.path.join(os.path.expanduser(config['pipeline_dir']), 'scripts')
#projectIDs = pd.read_table(config["reference_transcripts"], comment='#').set_index("reference_transcript", drop=False)
# Define which gene to work on
#ref_gene_fasta = config['ref_gene_fasta']
reference_transcripts_dir = config['reference_transcripts_dir']
reference_transcripts_length_distribution = config['reference_transcripts_length_distribution']
model_dir = [config['model_dir']]
projectID = [config['projectID']]
log_dir = [config['log_dir']]
remove_seqs = config['remove_seqs']
remove_lower_t = config['remove_lower_t'] # 0
remove_higher_t = config['remove_higher_t'] # 0
#model_dir_projectID = model_dir + "/" + projectID + "_MODEL_" + "_" + str(remove_lower_t) + "_" + str(remove_higher_t)
subtrees = range(1,config['subtrees']+1)
nr_trials_random_picking = config['nr.trials.random.picking']
#print(remove_lower_t)

# Import rules
include: os.path.join(ruleDir, 'quantizyme_model_preprocessing.rules')

# Target inputs
rule all:
    input:
        #"done.txt",
        #expand("logs/quantizyme_model_MSA/{projectID}_filtering_{remove_lower_t}_{remove_higher_t}_subtreeing.log", projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t),
        "out.zip",
        #expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_start.fasta", model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t),
        #expand("{model_dir_projectID}/{projectID}_start.fasta", model_dir_projectID=model_dir_projectID, projectID=projectID),
        #"{}/{}_MODEL_{}_{}/{}_start.fasta".format(model_dir, projectID, remove_lower_t, remove_higher_t, projectID),
        #"{}/{}_MODEL_{}_{}/align1.clustalo.phy".format(model_dir, projectID, remove_lower_t, remove_higher_t),
        ####"{}/{}_MODEL_{}_{}/{}_hc_tree_1.pdf".format(model_dir, projectID, remove_lower_t, remove_higher_t, projectID),
        expand("reference_transcripts_length_distribution/{projectID}_transcript_length_distribution.pdf", projectID = projectID),
        expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/envcluster.RData", model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t),
        expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_annot_subtree_{wildcards.n}.fasta", model_dir=model_dir, projectID=projectID, n=subtrees, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t)
        #expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_hc_tree_1.pdf", model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t)
        #expand("reference_transcripts_length_distribution/{projectID}_transcript_length_distribution.pdf", projectID=projectID),
        #expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/align1.clustalo.phy", model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t),
        #expand("{model_dir}/{projectID}_MODEL_{remove_lower_t}_{remove_higher_t}/{projectID}_hc_tree_1.pdf", model_dir=model_dir, projectID=projectID, remove_lower_t=remove_lower_t, remove_higher_t=remove_higher_t)

#bweeeeee
